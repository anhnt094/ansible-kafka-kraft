- name: Verify
  hosts: all

  tasks:
    - name: Get users
      ansible.builtin.getent:
        database: passwd

    - name: Get groups
      ansible.builtin.getent:
        database: group

    - name: Assert that user and group 'kafka' exists
      ansible.builtin.assert:
        that:
          - "'kafka' in getent_passwd"
          - "'kafka' in getent_group"

    - name: Register '/opt/kafka_2.13-3.8.1' installation directory status
      ansible.builtin.stat:
        path: '/opt/kafka_2.13-3.8.1'
      register: install_dir

    - name: Assert that '/opt/kafka_2.13-3.8.1' directory is created
      ansible.builtin.assert:
        that:
          - install_dir.stat.exists
          - install_dir.stat.isdir
          - install_dir.stat.pw_name == 'kafka'
          - install_dir.stat.gr_name == 'kafka'

    - name: Register '/opt/kafka' symlink directory status
      ansible.builtin.stat:
        path: '/opt/kafka'
      register: kafka_dir

    - name: Assert that '/opt/kafka' symlink is created
      ansible.builtin.assert:
        that:
          - kafka_dir.stat.exists
          - kafka_dir.stat.islnk
          - kafka_dir.stat.lnk_target == '/opt/kafka_2.13-3.8.1'

    - name: Register '/var/log/kafka' directory status
      ansible.builtin.stat:
        path: '/var/log/kafka'
      register: kafka_log_dir

    - name: Assert that '/var/log/kafka' directory is created
      ansible.builtin.assert:
        that:
          - kafka_log_dir.stat.exists
          - kafka_log_dir.stat.isdir
          - kafka_log_dir.stat.pw_name == 'kafka'
          - kafka_log_dir.stat.gr_name == 'kafka'

    - name: Register '/opt/kafka/logs' symlink directory status
      ansible.builtin.stat:
        path: '/opt/kafka/logs'
      register: application_logs_symlink

    - name: Assert that '/opt/kafka/logs' symlink is created
      ansible.builtin.assert:
        that:
          - application_logs_symlink.stat.exists
          - application_logs_symlink.stat.islnk
          - application_logs_symlink.stat.lnk_target == '/var/log/kafka'
          - application_logs_symlink.stat.pw_name == 'kafka'
          - application_logs_symlink.stat.gr_name == 'kafka'

    - name: Register '/etc/kafka' directory status
      ansible.builtin.stat:
        path: '/etc/kafka'
      register: config_dir

    - name: Assert that '/etc/kafka' directory is created
      ansible.builtin.assert:
        that:
          - config_dir.stat.exists
          - config_dir.stat.isdir
          - config_dir.stat.pw_name == 'kafka'
          - config_dir.stat.gr_name == 'kafka'

    - name: Populate service facts
      ansible.builtin.service_facts:

    - name: Assert that Kafka service is installed, running, and enabled
      ansible.builtin.assert:
        that:
          - "'kafka.service' in ansible_facts.services"
          - ansible_facts.services['kafka.service'].state == 'running'
          - ansible_facts.services['kafka.service'].status == 'enabled'

    - name: Register KRaft metadata directory status
      ansible.builtin.stat:
        path: '/var/lib/kafka/kraft-combined-logs'
      register: kraft_metadata_dir

    - name: Assert that KRaft metadata directory is created
      ansible.builtin.assert:
        that:
          - kraft_metadata_dir.stat.exists
          - kraft_metadata_dir.stat.isdir
          - kraft_metadata_dir.stat.pw_name == 'kafka'
          - kraft_metadata_dir.stat.gr_name == 'kafka'

    - name: Register KRaft meta.properties file status
      ansible.builtin.stat:
        path: '/var/lib/kafka/kraft-combined-logs/meta.properties'
      register: kraft_meta_properties

    - name: Assert that KRaft meta.properties file exists
      ansible.builtin.assert:
        that:
          - kraft_meta_properties.stat.exists
          - kraft_meta_properties.stat.isreg

    - name: Check if Kafka is responding on port 9092
      ansible.builtin.wait_for:
        port: 9092
        host: localhost
        timeout: 10

    - name: Check if controller is responding on port 9093
      ansible.builtin.wait_for:
        port: 9093
        host: localhost
        timeout: 10
